18a19
> // ERC721CheckpointableUpgradeable.sol is a modified version of ERC721Checkpointable.sol in this repository.
27c28,38
< // MODIFICATIONS
---
> // ERC721CheckpointableUpgradeable.sol MODIFICATIONS:
> // - Inherits from OpenZeppelin's ERC721EnumerableUpgradeable.sol, removing the original modification Nouns made to
> //   ERC721.sol, where for each mint two Transfer events were emitted; this modified implementation sticks with the
> //   OpenZeppelin standard.
> // - More importantly, this inheritance change makes the token upgradable, which we deemed important in the context of
> //   forks, in order to give new Nouns forks enough of a chance to modify their contracts to the new DAO's needs.
> // - Fixes a critical bug in `delegateBySig`, where the previous version allowed delegating to address zero, which then
> //   reverts whenever that owner tries to delegate anew or transfer their tokens. The fix is simply to revert on any
> //   attempt to delegate to address zero.
> //
> // ERC721Checkpointable.sol MODIFICATIONS:
37c48
< import './ERC721Enumerable.sol';
---
> import { ERC721EnumerableUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol';
39c50
< abstract contract ERC721Checkpointable is ERC721Enumerable {
---
> abstract contract ERC721CheckpointableUpgradeable is ERC721EnumerableUpgradeable {
133a145
>         require(delegatee != address(0), 'ERC721Checkpointable::delegateBySig: delegatee cannot be zero address');
