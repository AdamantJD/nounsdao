3c3
< /// @title The Nouns DAO auction house
---
> /// @title The Nouns DAO auction house, supporting UUPS upgrades
18a19
> // NounsAuctionHouseFork.sol is a modified version of NounsAuctionHouse.sol.
23a25,28
> //
> // NounsAuctionHouseFork.sol Modifications:
> // - Proxy pattern changed from Transparent to UUPS.
> // - Owner is set in the initialize function, instead of in a follow-up transaction.
31,33c36,39
< import { INounsAuctionHouse } from './interfaces/INounsAuctionHouse.sol';
< import { INounsToken } from './interfaces/INounsToken.sol';
< import { IWETH } from './interfaces/IWETH.sol';
---
> import { INounsAuctionHouse } from '../../../interfaces/INounsAuctionHouse.sol';
> import { INounsToken } from '../../../interfaces/INounsToken.sol';
> import { IWETH } from '../../../interfaces/IWETH.sol';
> import { UUPSUpgradeable } from '@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol';
35c41,49
< contract NounsAuctionHouse is INounsAuctionHouse, PausableUpgradeable, ReentrancyGuardUpgradeable, OwnableUpgradeable {
---
> contract NounsAuctionHouseFork is
>     INounsAuctionHouse,
>     PausableUpgradeable,
>     ReentrancyGuardUpgradeable,
>     OwnableUpgradeable,
>     UUPSUpgradeable
> {
>     string public constant NAME = 'NounsAuctionHouseFork';
> 
62a77
>         address _owner,
72c87
<         __Ownable_init();
---
>         _transferOwnership(_owner);
260a276,281
> 
>     /**
>      * @dev Reverts when `msg.sender` is not the owner of this contract; in the case of Noun DAOs it should be the
>      * DAO's treasury contract.
>      */
>     function _authorizeUpgrade(address) internal view override onlyOwner {}
